{"abi":[{"type":"function","name":"getOutcomeIndex","inputs":[{"name":"questionId","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"outcomeIndex","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"grantRole","inputs":[{"name":"role","type":"bytes32","internalType":"bytes32"},{"name":"account","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"hasRole","inputs":[{"name":"role","type":"bytes32","internalType":"bytes32"},{"name":"account","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"initialize","inputs":[{"name":"admin","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"requestMarketResolution","inputs":[{"name":"marketId","type":"bytes32","internalType":"bytes32"},{"name":"questionId","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"revokeRole","inputs":[{"name":"role","type":"bytes32","internalType":"bytes32"},{"name":"account","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"submitOutcome","inputs":[{"name":"marketId","type":"bytes32","internalType":"bytes32"},{"name":"outcomeIndex","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"updateOracleHandler","inputs":[{"name":"newOracleHandler","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"MarketResolutionRequested","inputs":[{"name":"marketId","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"questionId","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"requester","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"OracleHandlerUpdated","inputs":[{"name":"newOracleHandler","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"OutcomeSubmitted","inputs":[{"name":"marketId","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"outcomeIndex","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"oracle","type":"address","indexed":true,"internalType":"address"}],"anonymous":false}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"getOutcomeIndex(bytes32)":"e83d7483","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","initialize(address)":"c4d66de8","requestMarketResolution(bytes32,bytes32)":"8960e7b9","revokeRole(bytes32,address)":"d547741f","submitOutcome(bytes32,uint256)":"b11b7493","updateOracleHandler(address)":"4be9b15e"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"marketId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"questionId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"requester\",\"type\":\"address\"}],\"name\":\"MarketResolutionRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOracleHandler\",\"type\":\"address\"}],\"name\":\"OracleHandlerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"marketId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"outcomeIndex\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oracle\",\"type\":\"address\"}],\"name\":\"OutcomeSubmitted\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"questionId\",\"type\":\"bytes32\"}],\"name\":\"getOutcomeIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"outcomeIndex\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"marketId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"questionId\",\"type\":\"bytes32\"}],\"name\":\"requestMarketResolution\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"marketId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"outcomeIndex\",\"type\":\"uint256\"}],\"name\":\"submitOutcome\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOracleHandler\",\"type\":\"address\"}],\"name\":\"updateOracleHandler\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Defines the external functions and events for managing oracle interactions.\",\"events\":{\"MarketResolutionRequested(bytes32,bytes32,address)\":{\"params\":{\"marketId\":\"Unique identifier for the market.\",\"questionId\":\"Identifier for the market's question.\",\"requester\":\"Address that requested the resolution.\"}},\"OracleHandlerUpdated(address)\":{\"params\":{\"newOracleHandler\":\"Address of the new OracleHandler contract.\"}},\"OutcomeSubmitted(bytes32,uint256,address)\":{\"params\":{\"marketId\":\"Unique identifier for the market.\",\"oracle\":\"Address of the oracle submitting the outcome.\",\"outcomeIndex\":\"Index of the winning outcome.\"}}},\"kind\":\"dev\",\"methods\":{\"getOutcomeIndex(bytes32)\":{\"params\":{\"questionId\":\"Identifier for the market's question.\"},\"returns\":{\"outcomeIndex\":\"Index of the winning outcome.\"}},\"grantRole(bytes32,address)\":{\"params\":{\"account\":\"The account to grant the role to.\",\"role\":\"The role to grant.\"}},\"hasRole(bytes32,address)\":{\"params\":{\"account\":\"The account to check.\",\"role\":\"The role to check.\"},\"returns\":{\"_0\":\"bool indicating whether the account has the role.\"}},\"initialize(address)\":{\"details\":\"This function replaces the constructor for upgradeable contracts.\",\"params\":{\"admin\":\"Address to be granted ADMIN_ROLE.\"}},\"requestMarketResolution(bytes32,bytes32)\":{\"details\":\"Emits a MarketResolutionRequested event.\",\"params\":{\"marketId\":\"Unique identifier for the market.\",\"questionId\":\"Identifier for the market's question.\"}},\"revokeRole(bytes32,address)\":{\"params\":{\"account\":\"The account to revoke the role from.\",\"role\":\"The role to revoke.\"}},\"submitOutcome(bytes32,uint256)\":{\"details\":\"Only authorized oracles can call this function.Emits an OutcomeSubmitted event.\",\"params\":{\"marketId\":\"Unique identifier for the market.\",\"outcomeIndex\":\"Index of the winning outcome.\"}},\"updateOracleHandler(address)\":{\"details\":\"Only the admin can call this function.Emits an OracleHandlerUpdated event.\",\"params\":{\"newOracleHandler\":\"Address of the new OracleHandler contract.\"}}},\"title\":\"IOracleHandlerUpgradeable\",\"version\":1},\"userdoc\":{\"events\":{\"MarketResolutionRequested(bytes32,bytes32,address)\":{\"notice\":\"Emitted when a market resolution is requested.\"},\"OracleHandlerUpdated(address)\":{\"notice\":\"Emitted when the oracle handler is updated.\"},\"OutcomeSubmitted(bytes32,uint256,address)\":{\"notice\":\"Emitted when an outcome is submitted for a market.\"}},\"kind\":\"user\",\"methods\":{\"getOutcomeIndex(bytes32)\":{\"notice\":\"Retrieves the winning outcome index for a given question.\"},\"grantRole(bytes32,address)\":{\"notice\":\"Grants a specific role to an account.\"},\"hasRole(bytes32,address)\":{\"notice\":\"Checks if an account has a specific role.\"},\"initialize(address)\":{\"notice\":\"Initializes the OracleHandlerUpgradeable contract.\"},\"requestMarketResolution(bytes32,bytes32)\":{\"notice\":\"Requests the resolution of a specific market.\"},\"revokeRole(bytes32,address)\":{\"notice\":\"Revokes a specific role from an account.\"},\"submitOutcome(bytes32,uint256)\":{\"notice\":\"Submits the outcome for a specific market.\"},\"updateOracleHandler(address)\":{\"notice\":\"Updates the address of the OracleHandler contract.\"}},\"notice\":\"Interface for the OracleHandlerUpgradeable contract.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/oracle/IOracleHandlerUpgradeable.sol\":\"IOracleHandlerUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@gnosis.pm/safe-contracts/=lib/safe-contracts/contracts/\",\":@gnosis/conditional-tokens-contracts/=lib/conditional-tokens-contracts/contracts/\",\":@openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":conditional-tokens-contracts/=lib/conditional-tokens-contracts/contracts/\",\":ds-test/=lib/openzeppelin-contracts-upgradeable/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts-upgradeable/lib/halmos-cheatcodes/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":safe-contracts/=lib/safe-contracts/\"]},\"sources\":{\"src/oracle/IOracleHandlerUpgradeable.sol\":{\"keccak256\":\"0xa6ca1798f339b9e39180f810c54d53016eb785329bd1f6583f2bd03ea37c79fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://66863749fe881de83b3ec6343d1192d6593b6e89361a0175ec8cb38a888f7ef3\",\"dweb:/ipfs/QmTfS1nm9w2yigD6mBHq89vSAMTHUBGAUELuUrxDDrQp7n\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.28+commit.7893614a"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"bytes32","name":"marketId","type":"bytes32","indexed":true},{"internalType":"bytes32","name":"questionId","type":"bytes32","indexed":true},{"internalType":"address","name":"requester","type":"address","indexed":true}],"type":"event","name":"MarketResolutionRequested","anonymous":false},{"inputs":[{"internalType":"address","name":"newOracleHandler","type":"address","indexed":true}],"type":"event","name":"OracleHandlerUpdated","anonymous":false},{"inputs":[{"internalType":"bytes32","name":"marketId","type":"bytes32","indexed":true},{"internalType":"uint256","name":"outcomeIndex","type":"uint256","indexed":false},{"internalType":"address","name":"oracle","type":"address","indexed":true}],"type":"event","name":"OutcomeSubmitted","anonymous":false},{"inputs":[{"internalType":"bytes32","name":"questionId","type":"bytes32"}],"stateMutability":"view","type":"function","name":"getOutcomeIndex","outputs":[{"internalType":"uint256","name":"outcomeIndex","type":"uint256"}]},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"grantRole"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"stateMutability":"view","type":"function","name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"admin","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"initialize"},{"inputs":[{"internalType":"bytes32","name":"marketId","type":"bytes32"},{"internalType":"bytes32","name":"questionId","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"requestMarketResolution"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"revokeRole"},{"inputs":[{"internalType":"bytes32","name":"marketId","type":"bytes32"},{"internalType":"uint256","name":"outcomeIndex","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"submitOutcome"},{"inputs":[{"internalType":"address","name":"newOracleHandler","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"updateOracleHandler"}],"devdoc":{"kind":"dev","methods":{"getOutcomeIndex(bytes32)":{"params":{"questionId":"Identifier for the market's question."},"returns":{"outcomeIndex":"Index of the winning outcome."}},"grantRole(bytes32,address)":{"params":{"account":"The account to grant the role to.","role":"The role to grant."}},"hasRole(bytes32,address)":{"params":{"account":"The account to check.","role":"The role to check."},"returns":{"_0":"bool indicating whether the account has the role."}},"initialize(address)":{"details":"This function replaces the constructor for upgradeable contracts.","params":{"admin":"Address to be granted ADMIN_ROLE."}},"requestMarketResolution(bytes32,bytes32)":{"details":"Emits a MarketResolutionRequested event.","params":{"marketId":"Unique identifier for the market.","questionId":"Identifier for the market's question."}},"revokeRole(bytes32,address)":{"params":{"account":"The account to revoke the role from.","role":"The role to revoke."}},"submitOutcome(bytes32,uint256)":{"details":"Only authorized oracles can call this function.Emits an OutcomeSubmitted event.","params":{"marketId":"Unique identifier for the market.","outcomeIndex":"Index of the winning outcome."}},"updateOracleHandler(address)":{"details":"Only the admin can call this function.Emits an OracleHandlerUpdated event.","params":{"newOracleHandler":"Address of the new OracleHandler contract."}}},"version":1},"userdoc":{"kind":"user","methods":{"getOutcomeIndex(bytes32)":{"notice":"Retrieves the winning outcome index for a given question."},"grantRole(bytes32,address)":{"notice":"Grants a specific role to an account."},"hasRole(bytes32,address)":{"notice":"Checks if an account has a specific role."},"initialize(address)":{"notice":"Initializes the OracleHandlerUpgradeable contract."},"requestMarketResolution(bytes32,bytes32)":{"notice":"Requests the resolution of a specific market."},"revokeRole(bytes32,address)":{"notice":"Revokes a specific role from an account."},"submitOutcome(bytes32,uint256)":{"notice":"Submits the outcome for a specific market."},"updateOracleHandler(address)":{"notice":"Updates the address of the OracleHandler contract."}},"version":1}},"settings":{"remappings":["@gnosis.pm/safe-contracts/=lib/safe-contracts/contracts/","@gnosis/conditional-tokens-contracts/=lib/conditional-tokens-contracts/contracts/","@openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/","@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","conditional-tokens-contracts/=lib/conditional-tokens-contracts/contracts/","ds-test/=lib/openzeppelin-contracts-upgradeable/lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","halmos-cheatcodes/=lib/openzeppelin-contracts-upgradeable/lib/halmos-cheatcodes/src/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/openzeppelin-contracts/","safe-contracts/=lib/safe-contracts/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/oracle/IOracleHandlerUpgradeable.sol":"IOracleHandlerUpgradeable"},"evmVersion":"cancun","libraries":{}},"sources":{"src/oracle/IOracleHandlerUpgradeable.sol":{"keccak256":"0xa6ca1798f339b9e39180f810c54d53016eb785329bd1f6583f2bd03ea37c79fc","urls":["bzz-raw://66863749fe881de83b3ec6343d1192d6593b6e89361a0175ec8cb38a888f7ef3","dweb:/ipfs/QmTfS1nm9w2yigD6mBHq89vSAMTHUBGAUELuUrxDDrQp7n"],"license":"MIT"}},"version":1},"id":23}